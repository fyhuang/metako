{
  "version": 3,
  "sources": ["../src/entry.mts", "../src/entry_list.mts", "../src/history.mts", "../src/video.mts", "../src/index.mts"],
  "sourcesContent": ["// This is just a copy of EntryRenderer that can be accessed from JS\ninterface RenderedEntry {\n    repo_path: string;\n\n    is_video: boolean;\n}\n\nexport function currEntry(): RenderedEntry | null {\n    if (!('mtkEntry' in window)) {\n        return null;\n    }\n\n    const mtkEntry = window.mtkEntry as RenderedEntry;\n    return mtkEntry;\n}", "export function test() {\n    console.log(\"Hello, world!\");\n}\n\nexport function setupPreviewFromCcGrid(): void {\n    const cards = document.querySelectorAll<HTMLDivElement>('.cc-card');\n    const floatPreviewBox = document.getElementById('float-preview-box') as HTMLDivElement;\n    const floatPreviewImage = document.getElementById('float-preview-img') as HTMLImageElement;\n\n    cards.forEach(card => {\n        const cardPreview = card.querySelector<HTMLImageElement>('img.cc-card-preview');\n        const cardPreviewSrc = cardPreview?.src;\n        if (!cardPreviewSrc) {\n            return;\n        }\n\n        card.addEventListener('mouseover', (e: MouseEvent) => {\n            // Determine which side of the screen to place the preview\n            const isMouseInLeftHalf = e.clientX < window.innerWidth / 2;\n            const isMouseInTopHalf = e.clientY < window.innerHeight / 2;\n\n            // Set position of preview box\n            floatPreviewBox.style.left = \"auto\";\n            if (isMouseInTopHalf) {\n                floatPreviewBox.style.top = \"auto\";\n                floatPreviewBox.style.bottom = \"0px\";\n            } else {\n                floatPreviewBox.style.top = \"0px\";\n                floatPreviewBox.style.bottom = \"auto\";\n            }\n\n            // Set the preview image source\n            floatPreviewImage.src = cardPreviewSrc;\n\n            // Show the preview box\n            floatPreviewBox.style.display = 'block';\n        });\n\n        card.addEventListener('mouseout', () => {\n            // Hide the preview box\n            floatPreviewBox.style.display = 'none';\n        });\n    });\n}", "import { currEntry } from './entry.mts';\n\nexport function markViewed(progress: number, ratio: number): void {\n    // TODO: implement new sessions API\n    // TODO: work for more than video\n    const entry = currEntry();\n    if (entry === null || !entry.is_video) {\n        return;\n    }\n\n    jQuery.ajax(\n        '/api/video_history',\n        {\n            type: \"POST\",\n            data: JSON.stringify({\n                // TODO(fyhuang): escape?\n                \"path\": entry.repo_path,\n                \"current_ts\": Math.floor(progress),\n                \"current_ratio\": ratio,\n            }),\n            contentType: \"application/json\",\n        },\n    );\n}", "import { markViewed } from './history.mts';\n\nexport function setupVideoPlayer(): void {\n    const mainVideo = document.querySelector('#mainvideo') as HTMLVideoElement;\n\n    // Update history\n    mainVideo.addEventListener('timeupdate', (event) => {\n        markViewed(mainVideo.currentTime, mainVideo.currentTime / mainVideo.duration);\n    });\n\n    // YouTube-style keyboard shortcuts\n    document.addEventListener('keyup', (event) => {\n        // Play/pause/seek\n        if (event.key === 'k') {\n            if (mainVideo.paused) {\n                mainVideo.play();\n            } else {\n                mainVideo.pause();\n            }\n        } else if (event.key === 'j') {\n            mainVideo.currentTime -= 10;\n        } else if (event.key === 'l') {\n            mainVideo.currentTime += 10;\n        }\n\n        // Fullscreen\n        if (event.key === 'f') {\n            if (document.fullscreenElement === null) {\n                mainVideo.requestFullscreen();\n            } else {\n                document.exitFullscreen();\n            }\n        }\n    });\n}\n", "import { currEntry } from './entry.mts';\nimport * as entry_list from './entry_list.mts';\nimport * as video from './video.mts';\n\naddEventListener('DOMContentLoaded', () => {\n    // TODO: only if the layout is cc-grid\n    entry_list.setupPreviewFromCcGrid();\n});\n\n// Set up video stuff\naddEventListener('DOMContentLoaded', () => {\n    const entry = currEntry();\n    if (entry === null || !entry.is_video) {\n        return;\n    }\n    video.setupVideoPlayer();\n});\n\n// Utility function for writing to clipboard\nfunction writeToClipboard(text: string) {\n    if (navigator.clipboard) {\n        navigator.clipboard.writeText(text)\n            .then(() => { console.log(\"copy done\"); })\n            .catch(() => { alert(\"error\"); });\n    } else {\n        let textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n        textArea.style.position = \"absolute\";\n        textArea.style.opacity = \"0\";\n        \n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n\n        document.execCommand('copy');\n        textArea.remove();\n    }\n}\n(window as any).writeToClipboard = writeToClipboard;\n"],
  "mappings": "mBAOO,SAASA,GAAkC,CAC9C,MAAM,aAAc,OAIH,OAAO,SAHb,IAKf,CCVO,SAASC,GAA+B,CAC3C,IAAMC,EAAQ,SAAS,iBAAiC,UAAU,EAC5DC,EAAkB,SAAS,eAAe,mBAAmB,EAC7DC,EAAoB,SAAS,eAAe,mBAAmB,EAErEF,EAAM,QAAQG,GAAQ,CAElB,IAAMC,EADcD,EAAK,cAAgC,qBAAqB,GAC1C,IAC/BC,IAILD,EAAK,iBAAiB,YAAcE,GAAkB,CAElD,IAAMC,EAAoBD,EAAE,QAAU,OAAO,WAAa,EACpDE,EAAmBF,EAAE,QAAU,OAAO,YAAc,EAG1DJ,EAAgB,MAAM,KAAO,OACzBM,GACAN,EAAgB,MAAM,IAAM,OAC5BA,EAAgB,MAAM,OAAS,QAE/BA,EAAgB,MAAM,IAAM,MAC5BA,EAAgB,MAAM,OAAS,QAInCC,EAAkB,IAAME,EAGxBH,EAAgB,MAAM,QAAU,OACpC,CAAC,EAEDE,EAAK,iBAAiB,WAAY,IAAM,CAEpCF,EAAgB,MAAM,QAAU,MACpC,CAAC,EACL,CAAC,CACL,CCzCO,SAASO,EAAWC,EAAkBC,EAAqB,CAG9D,IAAMC,EAAQC,EAAU,EACpBD,IAAU,MAAQ,CAACA,EAAM,UAI7B,OAAO,KACH,qBACA,CACI,KAAM,OACN,KAAM,KAAK,UAAU,CAEjB,KAAQA,EAAM,UACd,WAAc,KAAK,MAAMF,CAAQ,EACjC,cAAiBC,CACrB,CAAC,EACD,YAAa,kBACjB,CACJ,CACJ,CCrBO,SAASG,GAAyB,CACrC,IAAMC,EAAY,SAAS,cAAc,YAAY,EAGrDA,EAAU,iBAAiB,aAAeC,GAAU,CAChDC,EAAWF,EAAU,YAAaA,EAAU,YAAcA,EAAU,QAAQ,CAChF,CAAC,EAGD,SAAS,iBAAiB,QAAUC,GAAU,CAEtCA,EAAM,MAAQ,IACVD,EAAU,OACVA,EAAU,KAAK,EAEfA,EAAU,MAAM,EAEbC,EAAM,MAAQ,IACrBD,EAAU,aAAe,GAClBC,EAAM,MAAQ,MACrBD,EAAU,aAAe,IAIzBC,EAAM,MAAQ,MACV,SAAS,oBAAsB,KAC/BD,EAAU,kBAAkB,EAE5B,SAAS,eAAe,EAGpC,CAAC,CACL,CC9BA,iBAAiB,mBAAoB,IAAM,CAE5BG,EAAuB,CACtC,CAAC,EAGD,iBAAiB,mBAAoB,IAAM,CACvC,IAAMC,EAAQC,EAAU,EACpBD,IAAU,MAAQ,CAACA,EAAM,UAGvBE,EAAiB,CAC3B,CAAC,EAGD,SAASC,EAAiBC,EAAc,CACpC,GAAI,UAAU,UACV,UAAU,UAAU,UAAUA,CAAI,EAC7B,KAAK,IAAM,CAAE,QAAQ,IAAI,WAAW,CAAG,CAAC,EACxC,MAAM,IAAM,CAAE,MAAM,OAAO,CAAG,CAAC,MACjC,CACH,IAAIC,EAAW,SAAS,cAAc,UAAU,EAChDA,EAAS,MAAQD,EACjBC,EAAS,MAAM,SAAW,WAC1BA,EAAS,MAAM,QAAU,IAEzB,SAAS,KAAK,YAAYA,CAAQ,EAClCA,EAAS,MAAM,EACfA,EAAS,OAAO,EAEhB,SAAS,YAAY,MAAM,EAC3BA,EAAS,OAAO,CACpB,CACJ,CACC,OAAe,iBAAmBF",
  "names": ["currEntry", "setupPreviewFromCcGrid", "cards", "floatPreviewBox", "floatPreviewImage", "card", "cardPreviewSrc", "e", "isMouseInLeftHalf", "isMouseInTopHalf", "markViewed", "progress", "ratio", "entry", "currEntry", "setupVideoPlayer", "mainVideo", "event", "markViewed", "setupPreviewFromCcGrid", "entry", "currEntry", "setupVideoPlayer", "writeToClipboard", "text", "textArea"]
}
